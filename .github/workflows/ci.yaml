on:
  pull_request:
  push:

env:
  NIX_CONFIG: "accept-flake-config = true"

jobs:
  flake-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/install-nix
      - uses: determinatesystems/flake-checker-action@v12

  formatter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/install-nix
      - run: nix fmt -- --check .

  topology:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/install-nix
      - uses: cachix/cachix-action@v16
        with:
          name: dominicegginton-dotfiles
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - run: nix build -L .\#topology.x86_64-linux.config.output
      - uses: actions/upload-artifact@v4
        with:
          path: result/
          name: topology
          retention-days: 90
          compression-level: 0

  nix-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/install-nix
      - id: set-matrix
        name: Generate Nix Matrix
        run: |
          set -Eeu
          matrix="$(nix eval --json '.#githubActions.matrix')"
          echo "matrix=$matrix" >> "$GITHUB_OUTPUT"

  nix-build:
    name: ${{ matrix.name }} (${{ matrix.system }})
    needs: nix-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: ${{fromJSON(needs.nix-matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/install-nix
      - uses: cachix/cachix-action@v16
        with:
          name: dominicegginton-dotfiles
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - run: nix build -L '.#${{ matrix.attr }}'

  ghost-gs60:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/install-nix
        with:
          free-disk-space: true
      - run: nix build -L .#nixosConfigurations.ghost-gs60.config.system.build.toplevel

  rio:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/install-nix
        with:
          free-disk-space: true
      - run: nix build -L .#nixosConfigurations.rio.config.system.build.toplevel

  latitude-7390:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/install-nix
        with:
          free-disk-space: true
      - run: nix build -L .#nixosConfigurations.latitude-7390.config.system.build.toplevel
