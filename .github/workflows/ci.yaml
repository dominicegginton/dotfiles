on:
  pull_request:
  push:

env:
  NIX_CONFIG: 'accept-flake-config = true'

jobs:
  flake-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
      - uses: determinatesystems/flake-checker-action@v10

  formatter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
      - run: nix fmt -- --check .

  topology:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
      - uses: cachix/cachix-action@v14
        with:
          name: dominicegginton-dotfiles
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix build -L .\#topology.x86_64-linux.config.output
      - uses: actions/upload-artifact@v4
        with:
          path: result/ 
          name: topology 
          retention-days: 90
          compression-level: 0

  nix-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
      - id: set-matrix
        name: Generate Nix Matrix
        run: |
          set -Eeu
          matrix="$(nix eval --json '.#githubActions.matrix')"
          echo "matrix=$matrix" >> "$GITHUB_OUTPUT"

  nix-build:
    name: ${{ matrix.name }} (${{ matrix.system }})
    needs: nix-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: ${{fromJSON(needs.nix-matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
      - uses: cachix/cachix-action@v14
        with:
          name: dominicegginton-dotfiles
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix build -L '.#${{ matrix.attr }}'

  ghost-gs60:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
      - run: nix build -L .#nixosConfigurations.ghost-gs60.config.system.build.toplevel

  latitude-5290:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
      - run: nix build -L .#nixosConfigurations.latitude-5290.config.system.build.toplevel

  latitude-7390:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
      - name: free disk space
        run: |
          sudo apt clean
          docker image prune -af
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo apt-get remove -y azure-cli google-cloud-sdk hhvm google-chrome-stable firefox powershell mono-devel
          sudo apt-get autoremove -y
          sudo apt-get clean
          rm -rf /usr/share/dotnet/
          df -h
      - run: nix build -L .#nixosConfigurations.latitude-7390.config.system.build.toplevel
